; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\exe\c491.o --depend=.\exe\c491.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Source\APP -I..\Source\APP\MC -I..\Source\BSP -I..\Source\FS\FF007 -I..\Source\OS\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\Source\OS\uCOS-II\Source -I..\Source\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Source\Libraries\CMSIS\Core\CM3 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x -DSTM32F10X_MD -DHARDWARE_VER=1 --omf_browse=.\exe\c491.crf ..\Source\APP\c491.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  C491_Init PROC
;;;63     /// -----------------------------------------------------------------------------------------------------
;;;64     void  C491_Init (void)
000000  b510              PUSH     {r4,lr}
;;;65     {
;;;66         C491_R_N        =   0;                                  /// 缓冲区数据初始化
000002  2000              MOVS     r0,#0
000004  496e              LDR      r1,|L1.448|
000006  6008              STR      r0,[r1,#0]  ; C491_R_N
;;;67         C491_R_BufInIx  =   0;
000008  496e              LDR      r1,|L1.452|
00000a  6008              STR      r0,[r1,#0]  ; C491_R_BufInIx
;;;68         C491_R_BufOutIx =   0;
00000c  496e              LDR      r1,|L1.456|
00000e  6008              STR      r0,[r1,#0]  ; C491_R_BufOutIx
;;;69         C491_R_SemPtr   =   OSSemCreate(0);                     /// 初始化接收使用的信号量
000010  f7fffffe          BL       OSSemCreate
000014  496d              LDR      r1,|L1.460|
000016  6008              STR      r0,[r1,#0]  ; C491_R_SemPtr
;;;70         
;;;71         C491_T_N        =   0;                                  /// 缓冲区数据初始化
000018  2000              MOVS     r0,#0
00001a  496d              LDR      r1,|L1.464|
00001c  6008              STR      r0,[r1,#0]  ; C491_T_N
;;;72         C491_T_BufOutIx =   0;
00001e  496d              LDR      r1,|L1.468|
000020  6008              STR      r0,[r1,#0]  ; C491_T_BufOutIx
;;;73         C491_T_SemPtr   =   OSSemCreate(1);                     /// 初始化发送使用的信号量
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       OSSemCreate
000028  496b              LDR      r1,|L1.472|
00002a  6008              STR      r0,[r1,#0]  ; C491_T_SemPtr
;;;74         
;;;75         BSP_491_Init();                                         /// 初始化IO及中断
00002c  f7fffffe          BL       BSP_491_Init
;;;76     }
000030  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  C491_IrqToRxBuf PROC
;;;83     /// -----------------------------------------------------------------------------------------------------
;;;84     void  C491_IrqToRxBuf (u16 data)
000032  b570              PUSH     {r4-r6,lr}
;;;85     {
000034  4604              MOV      r4,r0
;;;86     #if OS_CRITICAL_METHOD == 3                             /// Allocate storage for CPU status register
;;;87         OS_CPU_SR  cpu_sr = 0;
000036  2500              MOVS     r5,#0
;;;88     #endif
;;;89         
;;;90         
;;;91         OS_ENTER_CRITICAL();                                /// 进入临界区
000038  f7fffffe          BL       OS_CPU_SR_Save
00003c  4605              MOV      r5,r0
;;;92         if (C491_R_N < C491_R_BUF_SIZE) {                   /// 保证缓冲区没有溢出
00003e  4860              LDR      r0,|L1.448|
000040  6800              LDR      r0,[r0,#0]  ; C491_R_N
000042  2820              CMP      r0,#0x20
000044  d21b              BCS      |L1.126|
;;;93             C491_R_N++;                                     /// 数量增加
000046  485e              LDR      r0,|L1.448|
000048  6800              LDR      r0,[r0,#0]  ; C491_R_N
00004a  1c40              ADDS     r0,r0,#1
00004c  495c              LDR      r1,|L1.448|
00004e  6008              STR      r0,[r1,#0]  ; C491_R_N
;;;94             C491_R_Buf[C491_R_BufInIx++] = data;            /// 装载到缓冲区, 位置后移
000050  485c              LDR      r0,|L1.452|
000052  6801              LDR      r1,[r0,#0]  ; C491_R_BufInIx
000054  6800              LDR      r0,[r0,#0]  ; C491_R_BufInIx
000056  1c40              ADDS     r0,r0,#1
000058  4a5a              LDR      r2,|L1.452|
00005a  6010              STR      r0,[r2,#0]  ; C491_R_BufInIx
00005c  485f              LDR      r0,|L1.476|
00005e  f8204011          STRH     r4,[r0,r1,LSL #1]
;;;95             C491_R_BufInIx &= C491_R_BUF_SIZE_MASK;         /// 指针卷绕处理, 不用判断, 使之无处理时间波动
000062  4610              MOV      r0,r2
000064  6800              LDR      r0,[r0,#0]  ; C491_R_BufInIx
000066  f000001f          AND      r0,r0,#0x1f
00006a  4611              MOV      r1,r2
00006c  6008              STR      r0,[r1,#0]  ; C491_R_BufInIx
;;;96             OS_EXIT_CRITICAL();                             /// 退出临界区
00006e  4628              MOV      r0,r5
000070  f7fffffe          BL       OS_CPU_SR_Restore
;;;97             OSSemPost(C491_R_SemPtr);                       /// 发出信号量
000074  4855              LDR      r0,|L1.460|
000076  6800              LDR      r0,[r0,#0]  ; C491_R_SemPtr
000078  f7fffffe          BL       OSSemPost
00007c  e002              B        |L1.132|
                  |L1.126|
;;;98         } else {                                            /// 缓冲区满, 数据丢失
;;;99             OS_EXIT_CRITICAL();                             /// 退出临界区
00007e  4628              MOV      r0,r5
000080  f7fffffe          BL       OS_CPU_SR_Restore
                  |L1.132|
;;;100        }
;;;101    }
000084  bd70              POP      {r4-r6,pc}
;;;102    
                          ENDP

                  C491_ReceiveOne PROC
;;;145    /// -----------------------------------------------------------------------------------------------------
;;;146    u16  C491_ReceiveOne (u16 WaitTicks)
000086  b5f8              PUSH     {r3-r7,lr}
;;;147    {
000088  4604              MOV      r4,r0
;;;148    #if OS_CRITICAL_METHOD == 3                             /// Allocate storage for CPU status register
;;;149        OS_CPU_SR  cpu_sr = 0;
00008a  2600              MOVS     r6,#0
;;;150    #endif
;;;151        u16   data;
;;;152        u8    err;
;;;153        
;;;154        
;;;155        OSSemPend(C491_R_SemPtr, WaitTicks, &err);          /// 接收信号, 等待 WaitTicks 后超时
00008c  466a              MOV      r2,sp
00008e  4621              MOV      r1,r4
000090  484e              LDR      r0,|L1.460|
000092  6800              LDR      r0,[r0,#0]  ; C491_R_SemPtr
000094  f7fffffe          BL       OSSemPend
;;;156        OS_ENTER_CRITICAL();                                /// 进入临界区
000098  f7fffffe          BL       OS_CPU_SR_Save
00009c  4606              MOV      r6,r0
;;;157        if (C491_R_N > 0) {                                 /// 数据缓冲区非空
00009e  4848              LDR      r0,|L1.448|
0000a0  6800              LDR      r0,[r0,#0]  ; C491_R_N
0000a2  b1c0              CBZ      r0,|L1.214|
;;;158            C491_R_N--;
0000a4  4846              LDR      r0,|L1.448|
0000a6  6800              LDR      r0,[r0,#0]  ; C491_R_N
0000a8  1e40              SUBS     r0,r0,#1
0000aa  4945              LDR      r1,|L1.448|
0000ac  6008              STR      r0,[r1,#0]  ; C491_R_N
;;;159            data = C491_R_Buf[C491_R_BufOutIx++];           /// 取出数据, 位置后移
0000ae  4846              LDR      r0,|L1.456|
0000b0  6801              LDR      r1,[r0,#0]  ; C491_R_BufOutIx
0000b2  6800              LDR      r0,[r0,#0]  ; C491_R_BufOutIx
0000b4  1c40              ADDS     r0,r0,#1
0000b6  4a44              LDR      r2,|L1.456|
0000b8  6010              STR      r0,[r2,#0]  ; C491_R_BufOutIx
0000ba  4848              LDR      r0,|L1.476|
0000bc  f8305011          LDRH     r5,[r0,r1,LSL #1]
;;;160            C491_R_BufOutIx &= C491_R_BUF_SIZE_MASK;        /// 指针卷绕处理, 不用判断, 使之无处理时间波动
0000c0  4610              MOV      r0,r2
0000c2  6800              LDR      r0,[r0,#0]  ; C491_R_BufOutIx
0000c4  f000001f          AND      r0,r0,#0x1f
0000c8  4611              MOV      r1,r2
0000ca  6008              STR      r0,[r1,#0]  ; C491_R_BufOutIx
;;;161            OS_EXIT_CRITICAL();                             /// 退出临界区
0000cc  4630              MOV      r0,r6
0000ce  f7fffffe          BL       OS_CPU_SR_Restore
;;;162            return (data);                                  /// 返回数据
0000d2  4628              MOV      r0,r5
                  |L1.212|
;;;163        } else {
;;;164            OS_EXIT_CRITICAL();                             /// 退出临界区
;;;165            return (C491_R_OVRETIME_NODATA);                /// 返回未取得数据, 超时
;;;166        }
;;;167    }
0000d4  bdf8              POP      {r3-r7,pc}
                  |L1.214|
0000d6  4630              MOV      r0,r6                 ;164
0000d8  f7fffffe          BL       OS_CPU_SR_Restore
0000dc  f64f70ff          MOV      r0,#0xffff            ;165
0000e0  e7f8              B        |L1.212|
;;;168    
                          ENDP

                  C491_IrqTx PROC
;;;175    /// -----------------------------------------------------------------------------------------------------
;;;176    void  C491_IrqTx (void)
0000e2  b510              PUSH     {r4,lr}
;;;177    {
;;;178        if (C491_T_BufOutIx < C491_T_N) {
0000e4  483b              LDR      r0,|L1.468|
0000e6  6800              LDR      r0,[r0,#0]  ; C491_T_BufOutIx
0000e8  4939              LDR      r1,|L1.464|
0000ea  6809              LDR      r1,[r1,#0]  ; C491_T_N
0000ec  4288              CMP      r0,r1
0000ee  d20c              BCS      |L1.266|
;;;179            USART_SendData(BSP_USART_491, C491_T_Buf[C491_T_BufOutIx++]);
0000f0  4838              LDR      r0,|L1.468|
0000f2  6802              LDR      r2,[r0,#0]  ; C491_T_BufOutIx
0000f4  6800              LDR      r0,[r0,#0]  ; C491_T_BufOutIx
0000f6  1c40              ADDS     r0,r0,#1
0000f8  4b36              LDR      r3,|L1.468|
0000fa  6018              STR      r0,[r3,#0]  ; C491_T_BufOutIx
0000fc  4838              LDR      r0,|L1.480|
0000fe  f8301012          LDRH     r1,[r0,r2,LSL #1]
000102  4838              LDR      r0,|L1.484|
000104  f7fffffe          BL       USART_SendData
000108  e00c              B        |L1.292|
                  |L1.266|
;;;180        } else {
;;;181    //    USART_ClearITPendingBit(BSP_USART_491, USART_IT_TC);
;;;182          /// 可不用清除中断, 只关闭中断, 以便以后发送数据
;;;183          USART_ITConfig(BSP_USART_491, USART_IT_TC, DISABLE);
00010a  2200              MOVS     r2,#0
00010c  f2406126          MOV      r1,#0x626
000110  4834              LDR      r0,|L1.484|
000112  f7fffffe          BL       USART_ITConfig
;;;184          BSP_491_DeSet(DISABLE);
000116  2000              MOVS     r0,#0
000118  f7fffffe          BL       BSP_491_DeSet
;;;185          OSSemPost(C491_T_SemPtr);                       /// 发出信号量
00011c  482e              LDR      r0,|L1.472|
00011e  6800              LDR      r0,[r0,#0]  ; C491_T_SemPtr
000120  f7fffffe          BL       OSSemPost
                  |L1.292|
;;;186        }   
;;;187    }
000124  bd10              POP      {r4,pc}
;;;188    
                          ENDP

                  C491_SendBuf PROC
;;;198    /// -----------------------------------------------------------------------------------------------------
;;;199    u8  C491_SendBuf (u32 n, u16 buf[], u16 WaitTicks)
000126  b5f8              PUSH     {r3-r7,lr}
;;;200    {
000128  4605              MOV      r5,r0
00012a  460f              MOV      r7,r1
00012c  4616              MOV      r6,r2
;;;201        u8      err;
;;;202        u32     i;
;;;203        
;;;204        
;;;205        OSSemPend(C491_T_SemPtr, WaitTicks, &err);          /// 等待 WaitTicks 后超时
00012e  466a              MOV      r2,sp
000130  4631              MOV      r1,r6
000132  4829              LDR      r0,|L1.472|
000134  6800              LDR      r0,[r0,#0]  ; C491_T_SemPtr
000136  f7fffffe          BL       OSSemPend
;;;206        if (err == OS_ERR_NONE) {
00013a  f89d0000          LDRB     r0,[sp,#0]
00013e  b9b8              CBNZ     r0,|L1.368|
;;;207            BSP_491_DeSet(ENABLE);                          /// 发送使能
000140  2001              MOVS     r0,#1
000142  f7fffffe          BL       BSP_491_DeSet
;;;208            for (i = 0; i < n; i++) {
000146  2400              MOVS     r4,#0
000148  e005              B        |L1.342|
                  |L1.330|
;;;209                C491_T_Buf[i]   =   buf[i];
00014a  f8370014          LDRH     r0,[r7,r4,LSL #1]
00014e  4924              LDR      r1,|L1.480|
000150  f8210014          STRH     r0,[r1,r4,LSL #1]
000154  1c64              ADDS     r4,r4,#1              ;208
                  |L1.342|
000156  42ac              CMP      r4,r5                 ;208
000158  d3f7              BCC      |L1.330|
;;;210            }
;;;211            C491_T_N        =   n;
00015a  481d              LDR      r0,|L1.464|
00015c  6005              STR      r5,[r0,#0]  ; C491_T_N
;;;212            C491_T_BufOutIx =   0;
00015e  2000              MOVS     r0,#0
000160  491c              LDR      r1,|L1.468|
000162  6008              STR      r0,[r1,#0]  ; C491_T_BufOutIx
;;;213            USART_ITConfig(BSP_USART_491, USART_IT_TC, ENABLE);
000164  2201              MOVS     r2,#1
000166  f2406126          MOV      r1,#0x626
00016a  481e              LDR      r0,|L1.484|
00016c  f7fffffe          BL       USART_ITConfig
                  |L1.368|
;;;214        }
;;;215        return  err;
000170  f89d0000          LDRB     r0,[sp,#0]
;;;216    }
000174  bdf8              POP      {r3-r7,pc}
;;;217    
                          ENDP

                  C491_SendOne PROC
;;;225    /// -----------------------------------------------------------------------------------------------------
;;;226    u8  C491_SendOne (u16 data, u16 WaitTicks)
000176  b513              PUSH     {r0,r1,r4,lr}
;;;227    {
000178  460c              MOV      r4,r1
;;;228        return  C491_SendBuf(1, &data, WaitTicks);
00017a  4622              MOV      r2,r4
00017c  4669              MOV      r1,sp
00017e  2001              MOVS     r0,#1
000180  f7fffffe          BL       C491_SendBuf
;;;229    }
000184  bd1c              POP      {r2-r4,pc}
;;;230    
                          ENDP

                  C491_Send PROC
;;;236    /// -----------------------------------------------------------------------------------------------------
;;;237    void  C491_Send (u32 n, u16 buf[])
000186  b570              PUSH     {r4-r6,lr}
;;;238    {
000188  4605              MOV      r5,r0
00018a  460e              MOV      r6,r1
;;;239        u32     i;
;;;240        
;;;241        
;;;242        BSP_491_DeSet(ENABLE);
00018c  2001              MOVS     r0,#1
00018e  f7fffffe          BL       BSP_491_DeSet
;;;243        for (i = 0; i < n; i++) {
000192  2400              MOVS     r4,#0
000194  e005              B        |L1.418|
                  |L1.406|
;;;244            C491_T_Buf[i]   =   buf[i];
000196  f8360014          LDRH     r0,[r6,r4,LSL #1]
00019a  4911              LDR      r1,|L1.480|
00019c  f8210014          STRH     r0,[r1,r4,LSL #1]
0001a0  1c64              ADDS     r4,r4,#1              ;243
                  |L1.418|
0001a2  42ac              CMP      r4,r5                 ;243
0001a4  d3f7              BCC      |L1.406|
;;;245        }
;;;246        C491_T_N        =   n;
0001a6  480a              LDR      r0,|L1.464|
0001a8  6005              STR      r5,[r0,#0]  ; C491_T_N
;;;247        C491_T_BufOutIx =   0;
0001aa  2000              MOVS     r0,#0
0001ac  4909              LDR      r1,|L1.468|
0001ae  6008              STR      r0,[r1,#0]  ; C491_T_BufOutIx
;;;248        USART_ITConfig(BSP_USART_491, USART_IT_TC, ENABLE);
0001b0  2201              MOVS     r2,#1
0001b2  f2406126          MOV      r1,#0x626
0001b6  480b              LDR      r0,|L1.484|
0001b8  f7fffffe          BL       USART_ITConfig
;;;249    }
0001bc  bd70              POP      {r4-r6,pc}
;;;250    
                          ENDP

0001be  0000              DCW      0x0000
                  |L1.448|
                          DCD      C491_R_N
                  |L1.452|
                          DCD      C491_R_BufInIx
                  |L1.456|
                          DCD      C491_R_BufOutIx
                  |L1.460|
                          DCD      C491_R_SemPtr
                  |L1.464|
                          DCD      C491_T_N
                  |L1.468|
                          DCD      C491_T_BufOutIx
                  |L1.472|
                          DCD      C491_T_SemPtr
                  |L1.476|
                          DCD      C491_R_Buf
                  |L1.480|
                          DCD      C491_T_Buf
                  |L1.484|
                          DCD      0x40013800

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  C491_R_Buf
                          %        64
                  C491_T_Buf
                          %        64

                          AREA ||.data||, DATA, ALIGN=2

                  C491_R_BufInIx
                          DCD      0x00000000
                  C491_R_BufOutIx
                          DCD      0x00000000
                  C491_R_N
                          DCD      0x00000000
                  C491_T_BufOutIx
                          DCD      0x00000000
                  C491_T_N
                          DCD      0x00000000
                  C491_R_SemPtr
                          DCD      0x00000000
                  C491_T_SemPtr
                          DCD      0x00000000
