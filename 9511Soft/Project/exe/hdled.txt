; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\exe\hdled.o --depend=.\exe\hdled.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Source\APP -I..\Source\APP\MC -I..\Source\BSP -I..\Source\FS\FF007 -I..\Source\OS\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\Source\OS\uCOS-II\Source -I..\Source\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Source\Libraries\CMSIS\Core\CM3 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x -DSTM32F10X_MD -DHARDWARE_VER=1 --omf_browse=.\exe\hdled.crf ..\Source\APP\hdled.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  HDLED_TaskSparkling PROC
;;;109    
;;;110    static  void  HDLED_TaskSparkling (void *data)
000000  4605              MOV      r5,r0
;;;111    {
;;;112    #if OS_CRITICAL_METHOD == 3
;;;113        OS_CPU_SR       cpu_sr = 0;
000002  2600              MOVS     r6,#0
;;;114    #endif
;;;115        BSP_ID_TypeDef  id;
;;;116        
;;;117        
;;;118        id  =   *((BSP_ID_TypeDef*)data);
000004  782c              LDRB     r4,[r5,#0]
;;;119        
;;;120        for ( ; ; ) {
000006  bf00              NOP      
                  |L1.8|
;;;121            
;;;122            OS_ENTER_CRITICAL();
000008  f7fffffe          BL       OS_CPU_SR_Save
00000c  4606              MOV      r6,r0
;;;123            if (HDLED_SparklingTimes[id] > 0) {
00000e  484a              LDR      r0,|L1.312|
000010  f8500024          LDR      r0,[r0,r4,LSL #2]
000014  2800              CMP      r0,#0
000016  dd20              BLE      |L1.90|
;;;124                HDLED_SparklingTimes[id]--;
000018  4847              LDR      r0,|L1.312|
00001a  f8500024          LDR      r0,[r0,r4,LSL #2]
00001e  1e40              SUBS     r0,r0,#1
000020  4945              LDR      r1,|L1.312|
000022  f8410024          STR      r0,[r1,r4,LSL #2]
;;;125                OS_EXIT_CRITICAL();
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       OS_CPU_SR_Restore
;;;126            
;;;127                BSP_HD_LedSet(id, BSP_LED_ON , BSP_LED_OFF);
00002c  2201              MOVS     r2,#1
00002e  2100              MOVS     r1,#0
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       BSP_HD_LedSet
;;;128                OSTimeDlyHMSM(0, 0, 0, HDLED_SPARKLE_MS);
000036  2364              MOVS     r3,#0x64
000038  2200              MOVS     r2,#0
00003a  4611              MOV      r1,r2
00003c  4610              MOV      r0,r2
00003e  f7fffffe          BL       OSTimeDlyHMSM
;;;129                BSP_HD_LedSet(id, BSP_LED_OFF, BSP_LED_OFF);
000042  2201              MOVS     r2,#1
000044  4611              MOV      r1,r2
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       BSP_HD_LedSet
;;;130                OSTimeDlyHMSM(0, 0, 0, HDLED_SPARKLE_MS);
00004c  2364              MOVS     r3,#0x64
00004e  2200              MOVS     r2,#0
000050  4611              MOV      r1,r2
000052  4610              MOV      r0,r2
000054  f7fffffe          BL       OSTimeDlyHMSM
000058  e7d6              B        |L1.8|
                  |L1.90|
;;;131                
;;;132            } else {
;;;133                OS_EXIT_CRITICAL();
00005a  4630              MOV      r0,r6
00005c  f7fffffe          BL       OS_CPU_SR_Restore
;;;134                
;;;135            BSP_HD_LedSet(id, HDLED_StateRed[id], HDLED_StateGre[id]);
000060  4836              LDR      r0,|L1.316|
000062  5d02              LDRB     r2,[r0,r4]
000064  4836              LDR      r0,|L1.320|
000066  5d01              LDRB     r1,[r0,r4]
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       BSP_HD_LedSet
;;;136                OSTaskSuspend(HDLED_TaskPrio[id]);
00006e  4935              LDR      r1,|L1.324|
000070  5d08              LDRB     r0,[r1,r4]
000072  f7fffffe          BL       OSTaskSuspend
000076  e7c7              B        |L1.8|
;;;137    
;;;138        }
;;;139        }
;;;140    }
;;;141    
                          ENDP

                  HDLED_Init PROC
;;;50     
;;;51     void  HDLED_Init (void)
000078  b530              PUSH     {r4,r5,lr}
;;;52     {
00007a  b085              SUB      sp,sp,#0x14
;;;53         u32         i;
;;;54         
;;;55         
;;;56         for (i = 0; i < BSP_DEVICE_ID_N; i++) {
00007c  2400              MOVS     r4,#0
00007e  e023              B        |L1.200|
                  |L1.128|
;;;57             HDLED_StateRed[i]   =   BSP_LED_OFF;                            /// 红灯状态: 关闭
000080  2001              MOVS     r0,#1
000082  492f              LDR      r1,|L1.320|
000084  5508              STRB     r0,[r1,r4]
;;;58             HDLED_StateGre[i]   =   BSP_LED_ON;                             /// 绿灯状态: 打开
000086  2000              MOVS     r0,#0
000088  492c              LDR      r1,|L1.316|
00008a  5508              STRB     r0,[r1,r4]
;;;59             
;;;60             HDLED_TaskFunc[i]   =   HDLED_TaskSparkling;
00008c  482e              LDR      r0,|L1.328|
00008e  492f              LDR      r1,|L1.332|
000090  f8410024          STR      r0,[r1,r4,LSL #2]
;;;61             
;;;62             /// 建立奇数头开环电机任务
;;;63             OSTaskCreateExt((void (*)(void *)) HDLED_TaskFunc[i],           /// 任务函数入口(指针)
000094  2303              MOVS     r3,#3
000096  2200              MOVS     r2,#0
000098  2180              MOVS     r1,#0x80
00009a  482d              LDR      r0,|L1.336|
00009c  eb002044          ADD      r0,r0,r4,LSL #9
0000a0  ad01              ADD      r5,sp,#4
0000a2  c50f              STM      r5!,{r0-r3}
0000a4  4827              LDR      r0,|L1.324|
0000a6  5d03              LDRB     r3,[r0,r4]
0000a8  4605              MOV      r5,r0
0000aa  9300              STR      r3,[sp,#0]
0000ac  5d2b              LDRB     r3,[r5,r4]
0000ae  4d28              LDR      r5,|L1.336|
0000b0  eb052544          ADD      r5,r5,r4,LSL #9
0000b4  f50572fe          ADD      r2,r5,#0x1fc
0000b8  4d26              LDR      r5,|L1.340|
0000ba  1929              ADDS     r1,r5,r4
0000bc  4d23              LDR      r5,|L1.332|
0000be  f8550024          LDR      r0,[r5,r4,LSL #2]
0000c2  f7fffffe          BL       OSTaskCreateExt
0000c6  1c64              ADDS     r4,r4,#1              ;56
                  |L1.200|
0000c8  2c02              CMP      r4,#2                 ;56
0000ca  d3d9              BCC      |L1.128|
;;;64                             (void          * )&HDLED_TaskData[i],           /// 函数参数指针
;;;65                                                                             /// 栈顶指针
;;;66                             (OS_STK        * )&HDLED_TaskStk[i][APP_TASK_HDLED_STK_SIZE - 1],
;;;67                             (u8              ) HDLED_TaskPrio[i],           /// 优先级
;;;68                             (u16             ) HDLED_TaskPrio[i],           /// ID标识, 暂与优先级相同
;;;69                             (OS_STK        * )&HDLED_TaskStk[i][0],         /// 栈底指针
;;;70                             (u32             ) APP_TASK_HDLED_STK_SIZE,     /// 栈空间大小, 单位为OS_STK
;;;71                             (void          * ) 0,                           /// TCB扩展, 附属信息
;;;72                                                                             /// 操作信息
;;;73                             (u16             )(OS_TASK_OPT_STK_CLR | OS_TASK_OPT_STK_CHK));
;;;74         }
;;;75     }
0000cc  b005              ADD      sp,sp,#0x14
0000ce  bd30              POP      {r4,r5,pc}
;;;76     
                          ENDP

                  HDLED_Get PROC
;;;77     HDLED_ST_TypeDef  HDLED_Get (BSP_ID_TypeDef id)
0000d0  4601              MOV      r1,r0
;;;78     {
;;;79         if (id < BSP_DEVICE_ID_N) {
0000d2  2902              CMP      r1,#2
0000d4  da07              BGE      |L1.230|
;;;80             return (HDLED_ST_TypeDef)((HDLED_StateRed[id] << HDLED_ST_BIT_RED)
0000d6  4819              LDR      r0,|L1.316|
0000d8  5c40              LDRB     r0,[r0,r1]
0000da  4a19              LDR      r2,|L1.320|
0000dc  5c52              LDRB     r2,[r2,r1]
0000de  ea400042          ORR      r0,r0,r2,LSL #1
0000e2  b2c0              UXTB     r0,r0
                  |L1.228|
;;;81                                     | (HDLED_StateGre[id] << HDLED_ST_BIT_GRE));
;;;82         } else {
;;;83             return (HDLED_ST_OFF);
;;;84         }
;;;85     }
0000e4  4770              BX       lr
                  |L1.230|
0000e6  2003              MOVS     r0,#3                 ;83
0000e8  e7fc              B        |L1.228|
;;;86     extern   bool                COM_9511IsTset;
                          ENDP

                  HDLED_Set PROC
;;;87     void  HDLED_Set (BSP_ID_TypeDef id, HDLED_ST_TypeDef st)
0000ea  b570              PUSH     {r4-r6,lr}
;;;88     {
0000ec  4604              MOV      r4,r0
0000ee  460d              MOV      r5,r1
;;;89     	if(COM_9511IsTset  ==   FALSE	)
0000f0  4819              LDR      r0,|L1.344|
0000f2  7800              LDRB     r0,[r0,#0]  ; COM_9511IsTset
0000f4  b980              CBNZ     r0,|L1.280|
;;;90         if (id < BSP_DEVICE_ID_N) {
0000f6  2c02              CMP      r4,#2
0000f8  da0e              BGE      |L1.280|
;;;91             HDLED_StateRed[id]  =   (BSP_LED_TypeDef)((st >> HDLED_ST_BIT_RED) & 1);
0000fa  f3c50040          UBFX     r0,r5,#1,#1
0000fe  4910              LDR      r1,|L1.320|
000100  5508              STRB     r0,[r1,r4]
;;;92             HDLED_StateGre[id]  =   (BSP_LED_TypeDef)((st >> HDLED_ST_BIT_GRE) & 1);
000102  f0050001          AND      r0,r5,#1
000106  490d              LDR      r1,|L1.316|
000108  5508              STRB     r0,[r1,r4]
;;;93             
;;;94             BSP_HD_LedSet(id, HDLED_StateRed[id], HDLED_StateGre[id]);
00010a  4608              MOV      r0,r1
00010c  5d02              LDRB     r2,[r0,r4]
00010e  480c              LDR      r0,|L1.320|
000110  5d01              LDRB     r1,[r0,r4]
000112  4620              MOV      r0,r4
000114  f7fffffe          BL       BSP_HD_LedSet
                  |L1.280|
;;;95         }
;;;96     }
000118  bd70              POP      {r4-r6,pc}
;;;97     
                          ENDP

                  HDLED_Sparkle PROC
;;;98     void  HDLED_Sparkle (BSP_ID_TypeDef id, s32 times)
00011a  b570              PUSH     {r4-r6,lr}
;;;99     {
00011c  4604              MOV      r4,r0
00011e  460d              MOV      r5,r1
;;;100        if (id < BSP_DEVICE_ID_N) {
000120  2c02              CMP      r4,#2
000122  da08              BGE      |L1.310|
;;;101            HDLED_SparklingTimes[id]    =   times;
000124  4804              LDR      r0,|L1.312|
000126  f8405024          STR      r5,[r0,r4,LSL #2]
;;;102            if (times > 0) {
00012a  2d00              CMP      r5,#0
00012c  dd03              BLE      |L1.310|
;;;103            OSTaskResume(HDLED_TaskPrio[id]);
00012e  4905              LDR      r1,|L1.324|
000130  5d08              LDRB     r0,[r1,r4]
000132  f7fffffe          BL       OSTaskResume
                  |L1.310|
;;;104    
;;;105            }
;;;106        }
;;;107    }
000136  bd70              POP      {r4-r6,pc}
;;;108    
                          ENDP

                  |L1.312|
                          DCD      HDLED_SparklingTimes
                  |L1.316|
                          DCD      HDLED_StateGre
                  |L1.320|
                          DCD      HDLED_StateRed
                  |L1.324|
                          DCD      HDLED_TaskPrio
                  |L1.328|
                          DCD      HDLED_TaskSparkling
                  |L1.332|
                          DCD      HDLED_TaskFunc
                  |L1.336|
                          DCD      HDLED_TaskStk
                  |L1.340|
                          DCD      HDLED_TaskData
                  |L1.344|
                          DCD      COM_9511IsTset

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  HDLED_TaskStk
                          %        1024

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  HDLED_TaskData
000000  0001              DCB      0x00,0x01
                  HDLED_TaskPrio
000002  1314              DCB      0x13,0x14

                          AREA ||.data||, DATA, ALIGN=2

                  HDLED_TaskFunc
                          %        8
                  HDLED_StateRed
000008  0000              DCB      0x00,0x00
                  HDLED_StateGre
00000a  0000              DCB      0x00,0x00
                  HDLED_SparklingTimes
                          %        8
