; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\exe\bitstream.o --depend=.\exe\bitstream.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\Source\APP -I..\Source\APP\MC -I..\Source\BSP -I..\Source\FS\FF007 -I..\Source\OS\uCOS-II\Ports\ARM-Cortex-M3\Generic\RealView -I..\Source\OS\uCOS-II\Source -I..\Source\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Source\Libraries\CMSIS\Core\CM3 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x -DSTM32F10X_MD -DHARDWARE_VER=1 --omf_browse=.\exe\bitstream.crf ..\Source\3DS\bitstream.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  BitStreamEncode PROC
;;;55      */
;;;56     int BitStreamEncode(const unsigned char* pData, int DataLen, unsigned char* pStream)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;57     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4613              MOV      r3,r2
;;;58       unsigned int Bits  = 0;
00000a  2100              MOVS     r1,#0
;;;59       unsigned int Data  = 0;
00000c  2200              MOVS     r2,#0
;;;60       unsigned int Index = 0;
00000e  2600              MOVS     r6,#0
;;;61       unsigned int Count = 0;
000010  2000              MOVS     r0,#0
;;;62     
;;;63     
;;;64       while (Index < DataLen) {
000012  e013              B        |L1.60|
                  |L1.20|
;;;65         Bits  += 8;
000014  3108              ADDS     r1,r1,#8
;;;66         Data <<= 8;
000016  0212              LSLS     r2,r2,#8
;;;67         Data  += pData[Index++];
000018  4637              MOV      r7,r6
00001a  1c76              ADDS     r6,r6,#1
00001c  5de7              LDRB     r7,[r4,r7]
00001e  443a              ADD      r2,r2,r7
;;;68         while (Bits >= 7) {
000020  e00a              B        |L1.56|
                  |L1.34|
;;;69           pStream[Count++] = 0x80 | (Data >> (Bits - 7));
000022  1fcf              SUBS     r7,r1,#7
000024  fa22f707          LSR      r7,r2,r7
000028  b2ff              UXTB     r7,r7
00002a  f0470880          ORR      r8,r7,#0x80
00002e  4607              MOV      r7,r0
000030  1c40              ADDS     r0,r0,#1
000032  f8038007          STRB     r8,[r3,r7]
;;;70           Bits -= 7;
000036  1fc9              SUBS     r1,r1,#7
                  |L1.56|
000038  2907              CMP      r1,#7                 ;68
00003a  d2f2              BCS      |L1.34|
                  |L1.60|
00003c  42ae              CMP      r6,r5                 ;64
00003e  d3e9              BCC      |L1.20|
;;;71         }
;;;72       }
;;;73     
;;;74       if (Bits > 0) {
000040  b151              CBZ      r1,|L1.88|
;;;75         pStream[Count++] = 0x80 | (Data << (7 - Bits));
000042  f1c10707          RSB      r7,r1,#7
000046  fa02f707          LSL      r7,r2,r7
00004a  b2ff              UXTB     r7,r7
00004c  f0470880          ORR      r8,r7,#0x80
000050  4607              MOV      r7,r0
000052  1c40              ADDS     r0,r0,#1
000054  f8038007          STRB     r8,[r3,r7]
                  |L1.88|
;;;76       }
;;;77     
;;;78       return (Count);
;;;79     }
000058  e8bd81f0          POP      {r4-r8,pc}
;;;80     
                          ENDP

                  BitStreamDecode PROC
;;;91      */
;;;92     int BitStreamDecode(unsigned char* pData, int DataLen, const unsigned char* pStream)
00005c  e92d41f0          PUSH     {r4-r8,lr}
;;;93     {
000060  4603              MOV      r3,r0
000062  460c              MOV      r4,r1
000064  4615              MOV      r5,r2
;;;94       unsigned int Bits  = 0;
000066  2100              MOVS     r1,#0
;;;95       unsigned int Data  = 0;
000068  2200              MOVS     r2,#0
;;;96       unsigned int Index = 0;
00006a  2600              MOVS     r6,#0
;;;97       unsigned int Count = 0;
00006c  2000              MOVS     r0,#0
;;;98     
;;;99     
;;;100      while (Index < DataLen) {
00006e  e015              B        |L1.156|
                  |L1.112|
;;;101        Bits  += 7;
000070  1dc9              ADDS     r1,r1,#7
;;;102        Data <<= 7;
000072  01d2              LSLS     r2,r2,#7
;;;103        Data  += pStream[Count++] & 0x7F;
000074  4607              MOV      r7,r0
000076  1c40              ADDS     r0,r0,#1
000078  5def              LDRB     r7,[r5,r7]
00007a  f007077f          AND      r7,r7,#0x7f
00007e  443a              ADD      r2,r2,r7
;;;104        while (Bits >= 8) {
000080  e00a              B        |L1.152|
                  |L1.130|
;;;105          pData[Index++] = Data >> (Bits - 8);
000082  f1a10708          SUB      r7,r1,#8
000086  fa22f707          LSR      r7,r2,r7
00008a  f00708ff          AND      r8,r7,#0xff
00008e  4637              MOV      r7,r6
000090  1c76              ADDS     r6,r6,#1
000092  f8038007          STRB     r8,[r3,r7]
;;;106          Bits -= 8;
000096  3908              SUBS     r1,r1,#8
                  |L1.152|
000098  2908              CMP      r1,#8                 ;104
00009a  d2f2              BCS      |L1.130|
                  |L1.156|
00009c  42a6              CMP      r6,r4                 ;100
00009e  d3e7              BCC      |L1.112|
;;;107        }
;;;108      }
;;;109    
;;;110      return (Count);
;;;111    }
0000a0  e8bd81f0          POP      {r4-r8,pc}
;;;112    
                          ENDP

