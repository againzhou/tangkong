
/// ----------------------------------------------------------------------------
/// File Name          : mc_close_high.h
/// Description        : 闭环电机的闭环控制高层部分
///
///     D   --  表示 D轴, 即针背方向, 单位为1/400圈
///             (毛巾绣时指向线迹终点方向, 链式绣时指向线迹起点方向)
///     DM  --  表示 D轴电机轴, 单位为编码器精度, 即1/1600圈
///     H   --  表示 H轴, 即环梭孔方向, 单位为1/400圈
///             (找原点或穿线点时, H轴与D轴重合; 刺绣时, H轴相对D轴偏转-1/8r)
///     HM  --  表示 H轴电机轴, 单位为编码器精度, 即1/1600圈
///             (a针位HM与H轴原点重合, b~f针位不重合)
///     M   --  表示被控电机轴, 根据上下机头板确定 D或 H, 用于目标控制.
///
///     R   --  表示圈数, 单位为"圈"
///     V   --  表示D 或H 轴方向, 单位为"1/400圈", 通讯命令即按此单.
///     E   --  表示DM或HM轴方向, 单位为编码器分辨率, 即"1/1600圈".
///
///     闭环电机有两种控制方式: 开环方式 和 闭环方式
///     对于D轴, 有以下动作:  
///         1 找原点        (开环)  即找机械原点, 找到后M和T轴变量清零      
///         2 转到某方向    (闭环)  闭环控制, 一般绣作时使用
///         3 找穿线点      (混合)  由1和2组合完成, 两个动作方向最好相反
///     对于H轴, 相对复杂, 所有环轴联动的动作需要闭环控制, 有以下动作:
///         1 找原点        (混合)  找机械原点后, 然后找针位原点. 设置为非偏移状态
///         2 找穿线点      (混合)  找机械原点后, 然后找针位穿线点. 设置为非偏移状态
///         3 偏移动作      (闭环)  负方向转45°. 设置为偏移状态 (偏移状态才能刺绣)
///         4 打环动作      (闭环)  H1 和 H2, 更新T轴变量, 并根据T轴变量计算M轴变量
///         5 晃环动作      (开环)  正负半个齿左右晃动
///         6 换色动作      (开环)  只是更新当前针位 和 M轴变量, T轴变量不更新
/// ----------------------------------------------------------------------------

/// History:

/// y10/m01/d17     v0.02   chenyong    modify
/// 从模块mcc分离出此模块

/// y10/m11/d08     v0.01   chenyong    setup



#ifdef  PC924

#ifndef  MCH_H
#define  MCH_H

/// EXTERNS --------------------------------------------------------------------
#ifdef   MCH_MODULE
    #define  MCH_EXT                /// 不定义为 "外部", 本模块内
#else
    #define  MCH_EXT  extern        /// 定义为 "外部"
#endif


//#include  <ucos_ii.h>               /// OS核的头文件
//#include  <bsp.h>

//  #ifndef  CFG_H      /// 没有统一配置

/// USER DEFINED CONSTANTS ------------------------------------------------------------------------------

/// Exported types -------------------------------------------------------------

/// Global variables -----------------------------------------------------------
MCH_EXT  s32    MCH_MStarR;         ///  D或 H轴开始圈数
MCH_EXT  u16    MCH_MStarE;         ///  D或 H轴开始方向 (编码器)
MCH_EXT  s32    MCH_MStopR;         ///  D或 H轴结束圈数
MCH_EXT  u16    MCH_MStopE;         ///  D或 H轴结束方向 (编码器)
MCH_EXT  s32    MCH_MBackR;         ///  H轴折返点圈数
MCH_EXT  u16    MCH_MBackE;         ///  H轴折返点方向 (编码器)

/// FUNCTION PROTOTYPES ---------------------------------------------------------------------------------

void        MCH_AimDecIRQ       (void);
void        MCH_AimIncIRQ       (void);

void        MCH_SetMOrg         (void);
void        MCH_CloseEnter      (BSP_MOT_TQ_TypeDef tq, u16 StartTiming);
void        MCH_CloseExit       (void);
void        MCH_CloseMov1       (u8 spd_d10, u16 cnt);
void        MCH_CloseMov2       (u8 spd_d10, u16 cnt1, u16 cnt2);



#endif

#endif
